<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="testSchema">
    <select id="createTables">
        DROP Table if exists comment;
        DROP Table if exists issue_assignee;
        DROP Table if exists issue_label;
        DROP Table if exists issue;
        DROP Table if exists label;
        DROP Table if exists milestone;
        DROP Table if exists refresh_token;
        DROP Table if exists member;
        DROP Table if exists file;

        CREATE TABLE member
        (
            id       bigint AUTO_INCREMENT,
            email    varchar(255) NOT NULL UNIQUE,
            name     varchar(50)  NOT NULL,
            password varchar(50)  NOT NULL,
            profile  varchar(255) NOT NULL,
            PRIMARY KEY (id)
        );

        CREATE TABLE milestone
        (
            id          bigint AUTO_INCREMENT,
            name        varchar(50) NOT NULL,
            due_date    date        NOT NULL,
            description varchar(255),
            is_open     boolean     NOT NULL default TRUE,
            is_deleted  boolean     NOT NULL default FALSE,
            PRIMARY KEY (id)
        );

        CREATE TABLE label
        (
            id               bigint AUTO_INCREMENT,
            name             varchar(50) NOT NULL,
            description      varchar(255),
            background_color varchar(20) NOT NULL,
            text_color       varchar(20) NOT NULL,
            is_deleted       boolean     NOT NULL default FALSE,
            PRIMARY KEY (id)
        );

        CREATE TABLE issue_label
        (
            id       bigint AUTO_INCREMENT,
            issue_id bigint NOT NULL,
            label_id bigint NOT NULL,
            PRIMARY KEY (id)
        );

        CREATE TABLE issue_assignee
        (
            id          bigint AUTO_INCREMENT,
            issue_id    bigint NOT NULL,
            assignee_id bigint NOT NULL,
            PRIMARY KEY (id)
        );

        CREATE TABLE file
        (
            id  bigint AUTO_INCREMENT,
            url varchar(255) NOT NULL,
            PRIMARY KEY (id)
        );

        CREATE TABLE issue
        (
            id           bigint AUTO_INCREMENT,
            author_id    bigint      NOT NULL,
            milestone_id bigint,
            title        varchar(50) NOT NULL,
            is_open      boolean     NOT NULL default TRUE,
            is_deleted   boolean     NOT NULL default FALSE,
            created_at   timestamp            default current_timestamp,
            PRIMARY KEY (id)
        );

        CREATE TABLE comment
        (
            id         bigint AUTO_INCREMENT,
            issue_id   bigint       NOT NULL,
            author_id  bigint       NOT NULL,
            file_id    bigint,
            contents   varchar(255) NOT NULL,
            is_deleted boolean      NOT NULL default FALSE,
            created_at timestamp             default CURRENT_TIMESTAMP,
            PRIMARY KEY (id)
        );

        CREATE TABLE refresh_token
        (
            id               bigint AUTO_INCREMENT,
            refresh_token    varchar(2000),
            member_id        bigint,
            PRIMARY KEY (id)
        );

        ALTER TABLE issue
            ADD CONSTRAINT fk_issue_author_id FOREIGN KEY (author_id) REFERENCES member (id);

        ALTER TABLE issue
            ADD CONSTRAINT fk_issue_milestone_id FOREIGN KEY (milestone_id) REFERENCES milestone (id);

        ALTER TABLE comment
            ADD CONSTRAINT fk_comment_issue_id FOREIGN KEY (issue_id) REFERENCES issue (id);

        ALTER TABLE comment
            ADD CONSTRAINT fk_comment_author_id FOREIGN KEY (author_id) REFERENCES member (id);

        ALTER TABLE comment
            ADD CONSTRAINT fk_comment_file_id FOREIGN KEY (file_id) REFERENCES file (id);

        ALTER TABLE issue_label
            ADD CONSTRAINT fk_issue_label_issue_id FOREIGN KEY (issue_id) REFERENCES issue (id);

        ALTER TABLE issue_label
            ADD CONSTRAINT fk_issue_label_label_id FOREIGN KEY (label_id) REFERENCES label (id);

        ALTER TABLE issue_assignee
            ADD CONSTRAINT fk_issue_assignee_issue_id FOREIGN KEY (issue_id) REFERENCES issue (id);

        ALTER TABLE issue_assignee
            ADD CONSTRAINT fk_issue_assignee_assignee_id FOREIGN KEY (assignee_id) REFERENCES member (id);

        ALTER TABLE refresh_token
            ADD CONSTRAINT fk_refresh_token_member_id FOREIGN KEY (member_id) REFERENCES member (id);

    </select>
    <select id="insertData">
        INSERT INTO member (email, name, password, profile)
        values ('nag@codesquad.kr', 'nag', '1q2w3e4r!',
                'https://e7.pngegg.com/pngimages/981/645/png-clipart-default-profile-united-states-computer-icons-desktop-free-high-quality-person-icon-miscellaneous-silhouette.png'),
               ('joy@codesquad.kr', 'joy', '1q2w3e4r!',
                'https://e7.pngegg.com/pngimages/981/645/png-clipart-default-profile-united-states-computer-icons-desktop-free-high-quality-person-icon-miscellaneous-silhouette.png'),
               ('ati@codesquad.kr', 'ati', '1q2w3e4r!',
                'https://e7.pngegg.com/pngimages/981/645/png-clipart-default-profile-united-states-computer-icons-desktop-free-high-quality-person-icon-miscellaneous-silhouette.png');

        INSERT INTO milestone (name, due_date, is_open)
        values ('마일스톤 1', current_date, 1),
               ('마일스톤 2', current_date, 0),
               ('마일스톤 3', current_date, 1),
               ('마일스톤 0', current_date, 1);

        INSERT INTO label (name, background_color, text_color)
        values ('라벨 1', '#F08080', '#000000'),
               ('라벨 2', '#98FB98', '#000000'),
               ('라벨 3', '#6495ED', '#000000'),
               ('라벨 0', '#98FB98', '#000000');

        INSERT INTO issue (author_id, milestone_id, title, is_open)
        values (1, 1, '제목 1', 1),
               (2, 2, '제목 2', 0),
               (3, 3, '제목 3', 1),
               (3, 1, '제목 4', 0),
               (1, 1, '제목 5', 0);

        INSERT INTO issue_label (issue_id, label_id)
        values (1, 1),
               (1, 2),
               (2, 3),
               (3, 1),
               (3, 3),
               (4, 1),
               (4, 2),
               (4, 3);

        INSERT INTO issue_assignee (issue_id, assignee_id)
        values (1, 1),
               (1, 2),
               (2, 3),
               (3, 1),
               (3, 3),
               (4, 1),
               (4, 2),
               (4, 3);

        INSERT INTO comment (issue_id, author_id, contents)
        values (1, 1, '1번 댓글입니다.'),
               (1, 2, '2번 댓글입니다.'),
               (1, 2, '3번 댓글입니다.'),
               (3, 1, '4번 댓글입니다.'),
               (4, 1, '5번 댓글입니다.'),
               (4, 1, '6번 댓글입니다.'),
               (4, 1, '7번 댓글입니다.'),
               (5, 2, '8번 댓글입니다.'),
               (5, 3, '9번 댓글입니다.'),
               (5, 1, '10번 댓글입니다.'),
               (5, 2, '11번 댓글입니다.');
    </select>
</mapper>
