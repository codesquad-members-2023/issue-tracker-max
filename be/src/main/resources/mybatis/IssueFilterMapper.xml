<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codesquad.issuetracker.api.issue.repository.IssueFilterMapper">

    <resultMap id="issueResultMap" type="IssueFilterVo">
        <id property="id" column="id"/>
        <result property="number" column="number"/>
        <result property="title" column="title"/>
        <result property="createdTime" column="created_time"/>
        <result property="author" column="nickname"/>
        <result property="authorUrl" column="profile_img_url"/>
        <result property="milestoneTitle" column="milestone_title"/>
        <collection property="labels" ofType="com.codesquad.issuetracker.api.label.dto.response.LabelResponse">
            <id property="id" column="label_id"/>
            <result property="title" column="label_title"/>
            <result property="description" column="label_description"/>
            <result property="backgroundColor" column="label_background_color"/>
            <result property="isDark" column="label_is_dark"/>
        </collection>
    </resultMap>

    <select id="readAll" resultMap="issueResultMap">
        SELECT
        label.id AS label_id,
        label.title AS label_title,
        label.description AS label_description,
        label.background_color AS label_background_color,
        label.is_dark AS label_is_dark,
        i.id, i.number, i.title, i.created_time,i.is_closed, i.member_id,
        member.nickname, member.profile_img_url, milestone.id,
        milestone.title AS milestone_title,
        issue_assignee.member_id AS assignee,
        issue_comment.member_id
        FROM
        issue i
        JOIN
        member ON i.member_id = member.id
        LEFT JOIN
        milestone ON i.milestone_id = milestone.id
        LEFT JOIN
        issue_label ON i.id = issue_label.issue_id
        LEFT JOIN
        label ON issue_label.label_id = label.id
        LEFT JOIN
        issue_assignee ON i.id = issue_assignee.issue_id
        LEFT JOIN
        issue_comment ON i.id = issue_comment.issue_id
        <where>
            i.organization_id = #{organizationId}
            <if test="request.isClosed == null || request.isClosed == false ">
                and i.is_closed = false
            </if>

            <if test="request.isClosed == true">
                and i.is_closed = true
            </if>

            <if test="request.assignee != null">
                <choose>
                    <when test="request.assignee == 0">
                        and issue_assignee.member_id IS NULL
                    </when>
                    <otherwise>
                        and issue_assignee.member_id = #{request.assignee}
                    </otherwise>
                </choose>
            </if>

            <if test="request.labels != null">
                <choose>
                    <when test="request.labelsContainZero == true">
                        and label.id IS NULL
                    </when>
                    <otherwise>
                        and i.id IN (
                        SELECT issue_label.issue_id
                        FROM issue_label
                        WHERE issue_label.label_id IN
                        <foreach item="labelId" collection="request.labels" open="(" separator="," close=")">
                            #{labelId}
                        </foreach>
                        GROUP BY issue_label.issue_id
                        HAVING COUNT(issue_label.label_id) = ${request.labels.size}
                        )
                    </otherwise>
                </choose>

            </if>

            <if test="request.milestone != null">
                <choose>
                    <when test="request.milestone == 0">
                        and milestone.id IS NULL
                    </when>
                    <otherwise>
                        and milestone.id = #{request.milestone}
                    </otherwise>
                </choose>
            </if>

            <if test="request.author != null">
                and i.member_id = #{request.author}
            </if>

            <if test="request.includeMemberComment != null">
                and issue_comment.member_id = #{request.includeMemberComment}
            </if>
        </where>
    </select>
</mapper>
