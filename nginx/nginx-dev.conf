user  nginx; # Nginx 웹 서버가 실행될 때 사용할 사용자를 지정합니다.
worker_processes  auto; # 웹 서버의 worker 프로세스의 수, 'auto'를 지정하면 시스템 자원에 따라 자동으로 프로세스 수가 결정됩니다
#  Nginx의 오류 로그 파일의 경로와 로그 레벨을 설정합니다.  '/var/log/nginx/error.log' 경로에 'warn' 레벨 이상의 오류가 기록될 것입니다.
error_log  /var/log/nginx/error.log warn;
# Nginx 마스터 프로세스의 PID 파일 경로를 설정. Nginx 프로세스의 PID를 저장하여, 관리와 모니터링을 도와줍니다.
pid        /var/run/nginx.pid;
events { # Nginx 웹 서버의 이벤트 모듈을 설정
    worker_connections  1024; # worker 프로세스가 동시에 처리할 수 있는 커넥션의 최대 개수를 설정
}
http {

    include       /etc/nginx/mime.types; # /etc/nginx/mime.types 파일을 포함하여 MIME 유형을 설정합니다. MIME 유형은 파일의 확장자에 따라 콘텐츠 유형을 지정하는 데 사용됩니다.
    default_type  application/octet-stream; # MIME 유형을 지정하지 않은 경우에 기본으로 사용할 콘텐츠 유형을 설정

    client_max_body_size 100M;

    # upstream 변수는 server 설정에서 NGINX가 받아들인 요청을 어떤 서버로 흘려보내 줄 것인지 결정할 때 사용된다.
	# 백엔드 upstream 설정
    upstream myweb-api {
        server app:8080;
    }

	# 프론트엔드 upstream 설정
    upstream myweb-web {
        server web:5173;
    }

    server {
        listen 80;

		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        location /api {
            proxy_pass         http://myweb-api/api;
        }

		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            proxy_pass         http://myweb-web/;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # Nginx가 sendfile 시스템 콜을 사용하여 파일을 전송할지 여부를 결정 'on'으로 설정되어 있으므로, Nginx는 sendfile을 사용하여 파일 전송을 수행할 것입니다.
    sendfile        on;
    # 클라이언트와 연결된 keep-alive 타임아웃을 지정합니다.
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}
